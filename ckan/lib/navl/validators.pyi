
import ckan.lib.navl.dictization_functions as df

missing = df.missing
StopOnError = df.StopOnError
Invalid = df.Invalid

def identity_converter(key, data, errors, context): ...
def keep_extras(key, data, errors, context): ...
def not_missing(key, data, errors, context): ...
def not_empty(key, data, errors, context): ...
def if_empty_same_as(other_key): ...
def both_not_empty(other_key): ...
def empty(key, data, errors, context): ...
def ignore(key, data, errors, context): ...
def default(default_value):
    ...

def configured_default(config_name, default_value_if_not_configured):
    ...

def ignore_missing(key, data, errors, context):
    ...

def ignore_empty(key, data, errors, context): ...
def convert_int(value, context): ...
def unicode_only(value):
    ...

def unicode_safe(value):
    ...

def limit_to_configured_maximum(config_option, default_limit):
    ...
