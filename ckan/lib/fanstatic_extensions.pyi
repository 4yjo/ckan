"""
This type stub file was generated by pyright.
"""

class CkanCustomRenderer(object):
    ''' Allows for in-line js and IE conditionals via fanstatic. '''
    def __init__(self, script=..., renderer=..., condition=..., other_browsers=...) -> None:
        ...
    
    def __call__(self, url):
        ...
    


def render_js(url):
    ...

def render(self, library_url):
    ...

def fits(self, resource):
    ...

def sort_resources(resources):
    """Sort resources for inclusion on web page.

    A number of rules are followed:

    * resources are always grouped per renderer (.js, .css, etc)
    * resources that depend on other resources are sorted later
    * resources are grouped by library, if the dependencies allow it
    * libraries are sorted by name, if dependencies allow it
    * resources are sorted by resource path if they both would be
      sorted the same otherwise.

    The only purpose of sorting on library is so we can
    group resources per library, so that bundles can later be created
    of them if bundling support is enabled.

    Note this sorting algorithm guarantees a consistent ordering, no
    matter in what order resources were needed.
    """
    ...

