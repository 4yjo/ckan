"""
This type stub file was generated by pyright.
"""

import logging

""" The application's Globals object """
log = logging.getLogger(__name__)
DEFAULT_MAIN_CSS_FILE = "/base/css/main.css"
mappings = {}
app_globals_from_config_details = {
    "ckan.site_title": {},
    "ckan.site_logo": {},
    "ckan.site_url": {},
    "ckan.site_description": {},
    "ckan.site_about": {},
    "ckan.site_intro_text": {},
    "ckan.site_custom_css": {},
    "ckan.favicon": {},
    "ckan.template_head_end": {},
    "ckan.template_footer_end": {},
    "ckan.site_id": {},
    "ckan.recaptcha.publickey": {"name": "recaptcha_publickey"},
    "ckan.template_title_delimiter": {"default": "-"},
    "ckan.template_head_end": {},
    "ckan.template_footer_end": {},
    "ckan.dumps_url": {},
    "ckan.dumps_format": {},
    "ckan.homepage_style": {"default": "1"},
    "search.facets": {
        "default": "organization groups tags res_format license_id",
        "type": "split",
        "name": "facets",
    },
    "package_hide_extras": {"type": "split"},
    "ckan.plugins": {"type": "split"},
    "debug": {"default": "false", "type": "bool"},
    "ckan.debug_supress_header": {"default": "false", "type": "bool"},
    "ckan.legacy_templates": {"default": "false", "type": "bool"},
    "ckan.tracking_enabled": {"default": "false", "type": "bool"},
    "ckan.datasets_per_page": {"default": "20", "type": "int"},
    "ckan.activity_list_limit": {"default": "30", "type": "int"},
    "ckan.user_list_limit": {"default": "20", "type": "int"},
    "search.facets.default": {
        "default": "10",
        "type": "int",
        "name": "facets_default_number",
    },
}
_CONFIG_CACHE = {}

def set_main_css(css_file):
    """ Sets the main_css.  The css_file must be of the form file.css """
    ...

def set_app_global(key, value):
    """
    Set a new key on the app_globals (g) object

    It will process the value according to the options on
    app_globals_from_config_details (if any)
    """
    ...

def process_app_global(key, value):
    """
    Tweak a key, value pair meant to be set on the app_globals (g) object

    According to the options on app_globals_from_config_details (if any)
    """
    ...

def get_globals_key(key): ...
def reset():
    """ set updatable values from config """
    ...

class _Globals(object):
    """Globals acts as a container for objects available throughout the
    life of the application."""

    def __init__(self) -> None:
        """One instance of Globals is created during application
        initialization and is available during requests via the
        'app_globals' variable
        """
        ...

app_globals = _Globals()
