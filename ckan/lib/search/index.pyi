from typing import Dict, NoReturn

TYPE_FIELD: str
PACKAGE_TYPE: str
KEY_CHARS: str

SOLR_FIELDS: List[str]
RESERVED_FIELDS: List[str]
RELATIONSHIP_TYPES: List[Tuple[str, str]]

def escape_xml_illegal_chars(val: str, replacement: str = ...) -> str: ...
def clear_index() -> None: ...

class SearchIndex(object):
    def __init__(self) -> None: ...
    def insert_dict(self, data: Dict) -> None: ...
    def update_dict(self, data: Dict) -> None: ...
    def remove_dict(self, data: Dict) -> None: ...
    def clear(self) -> None: ...
    def get_all_entity_ids(self) -> NoReturn: ...

class NoopSearchIndex(SearchIndex): ...

class PackageSearchIndex(SearchIndex):
    def remove_dict(self, pkg_dict: Dict) -> None: ...
    def update_dict(
        self, pkg_dict: Dict, defer_commit: bool = ...
    ) -> None: ...
    def index_package(
        self, pkg_dict: Dict, defer_commit: bool = ...
    ) -> None: ...
    def commit(self) -> None: ...
    def delete_package(self, pkg_dict: Dict) -> None: ...
