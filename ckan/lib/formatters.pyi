"""
This type stub file was generated by pyright.
"""

def localised_nice_date(
    datetime_, show_date=..., with_hours=..., with_seconds=..., format=...
):
    """Returns a friendly localised unicode representation of a datetime.
    e.g. '31 minutes ago'
         '1 day ago'
         'April 24, 2013'  (show_date=True)
         'October 25, 2017, 16:03 (UTC)' (show_date=True, with_hours=True)
         'Apr 3, 2020, 4:00:31 PM' (
                 show_date=True, with_hours=True, format='medium')
         'April 03, 20' (show_date=True, format='MMMM dd, YY')

    :param datetime_: The date to format
    :type datetime_: datetime
    :param show_date: Show 'April 24, 2013' instead of '2 days ago'
    :type show_date: bool
    :param with_hours: should the `hours:mins` be shown for dates
    :type with_hours: bool
    :param with_seconds: should the `hours:mins:seconds` be shown for dates
    :type with_seconds: bool
    :param format: override format of datetime representation using babel
        date/time pattern syntax of predefined pattern.
    :type format: str


    :rtype: sting
    """
    ...

def localised_number(number):
    """ Returns a localised unicode representation of number """
    ...

def localised_filesize(number):
    """Returns a localised unicode representation of a number in bytes, MiB
    etc"""
    ...

def localised_SI_number(number):
    """Returns a localised unicode representation of a number in SI format
    eg 14700 becomes 14.7k"""
    ...
