from typing import Any
from jinja2 import ext, loaders


def get_jinja_env_options(): ...
def empty_and_escape(value):
    ...

def regularise_html(html):
    ...

class CkanInternationalizationExtension(ext.InternationalizationExtension):
    def parse(self, parser): ...

class CkanExtend(ext.Extension):
    tags = ...
    def __init__(self, environment) -> None: ...
    def parse(self, parser): ...

class CkanFileSystemLoader(loaders.FileSystemLoader):
    def get_source(self, environment, template): ...

class BaseExtension(ext.Extension):

    def parse(self, parser:Any): ...

def jinja2_getattr(self, obj, attribute):
    """Get an item or attribute of an object but prefer the attribute.
    Unlike :meth:`getitem` the attribute *must* be a bytestring.

    This is a customised version to work with properties
    """
    ...
