"""
This type stub file was generated by pyright.
"""

import logging
import six
from pylons.controllers import WSGIController

"""The base Controller API

Provides the BaseController class for subclassing.
"""
if six.PY2: ...
log = logging.getLogger(__name__)
APIKEY_HEADER_NAME_KEY = "apikey_header_name"
APIKEY_HEADER_NAME_DEFAULT = "X-CKAN-API-Key"

def abort(status_code=..., detail=..., headers=..., comment=...):
    """Abort the current request immediately by returning an HTTP exception.

    This is a wrapper for :py:func:`pylons.controllers.util.abort` that adds
    some CKAN custom behavior, including allowing
    :py:class:`~ckan.plugins.interfaces.IAuthenticator` plugins to alter the
    abort response, and showing flash messages in the web interface.

    """
    ...

def render_snippet(*template_names, **kw):
    """Helper function for rendering snippets. Rendered html has
    comment tags added to show the template used. NOTE: unlike other
    render functions this takes a list of keywords instead of a dict for
    the extra template variables.

    :param template_names: the template to render, optionally with fallback
        values, for when the template can't be found. For each, specify the
        relative path to the template inside the registered tpl_dir.
    :type template_names: str
    :param kw: extra template variables to supply to the template
    :type kw: named arguments of any type that are supported by the template
    """
    ...

def render_jinja2(template_name, extra_vars): ...
def render(template_name, extra_vars=..., *pargs, **kwargs):
    """Render a template and return the output.

    This is CKAN's main template rendering function.

    :params template_name: relative path to template inside registered tpl_dir
    :type template_name: str
    :params extra_vars: additional variables available in template
    :type extra_vars: dict
    :params pargs: DEPRECATED
    :type pargs: tuple
    :params kwargs: DEPRECATED
    :type kwargs: dict

    """
    ...

class ValidationException(Exception): ...

if six.PY2:
    class BaseController(WSGIController):
        """Base class for CKAN controller classes to inherit from."""

        repo = ...
        log = ...
        def __before__(self, action, **params): ...
        def __call__(self, environ, start_response):
            """Invoke the Controller"""
            ...
        def __after__(self, action, **params): ...
