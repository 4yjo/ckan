from typing import Dict, Iterable, List, Optional
import ckan.plugins as p

DEFAULT_RESOURCE_VIEW_TYPES: List[str] = ["image_view", "recline_view"]

def res_format(resource: Dict) -> Optional[str]: ...
def compare_domains(urls: Iterable[str]) -> bool: ...
def on_same_domain(data_dict: Dict) -> bool: ...
def get_preview_plugin(data_dict: Dict, return_first: bool = ...) -> Optional[p.IResourcePreview]: ...
def get_view_plugin(view_type: Optional[str]) -> Optional[p.IResourceView]: ...
def get_view_plugins(view_types: Iterable[str]) -> List[p.IResourceView]: ...
def get_allowed_view_plugins(data_dict: Dict) -> List[p.IResourceView]: ...
def get_default_view_plugins(
    get_datastore_views: bool = ...,
) -> List[p.IResourceView]: ...
def add_views_to_resource(
    context: Dict,
    resource_dict: Dict,
    dataset_dict: Optional[Dict] = ...,
    view_types: List[str] = ...,
    create_datastore_views: bool = ...,
) -> List[Dict]: ...
def add_views_to_dataset_resources(
    context: Dict,
    dataset_dict: Dict,
    view_types: List[str] = ...,
    create_datastore_views: bool = ...,
) -> List[Dict]: ...
