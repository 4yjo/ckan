import ckan.model as model
from typing import Any, Callable, Dict, List

def group_list_dictize(
    obj_list: List[model.Group],
    context: Dict,
    sort_key: Callable = ...,
    reverse: bool = ...,
    with_package_counts: bool = ...,
    include_groups: bool = ...,
    include_tags: bool = ...,
    include_extras: bool = ...,
) -> List[Dict]: ...
def resource_list_dictize(
    res_list: List[model.Resource], context: Dict
) -> List[Dict]: ...
def extras_dict_dictize(extras_dict: Dict, context: Dict) -> List[Dict]: ...
def extras_list_dictize(
    extras_list: List[Any], context: Dict
) -> List[Dict]: ...
def resource_dictize(res: model.Resource, context: Dict) -> Dict: ...
def package_dictize(pkg: model.Package, context: Dict) -> Dict: ...
def get_group_dataset_counts() -> Dict: ...
def group_dictize(
    group: model.Group,
    context: Dict,
    include_groups: bool = ...,
    include_tags: bool = ...,
    include_users: bool = ...,
    include_extras: bool = ...,
    packages_field: str = ...,
    **kw: Any
) -> Dict: ...
def tag_list_dictize(
    tag_list: List[model.Tag], context: Dict
) -> List[Dict]: ...
def tag_dictize(
    tag: model.Tag, context: Dict, include_datasets: bool = ...
) -> Dict: ...
def user_list_dictize(
    obj_list: List[model.User],
    context: Dict,
    sort_key: Callable = ...,
    reverse: bool = ...,
) -> List[Dict]: ...
def member_dictize(member: model.Member, context: Dict) -> Dict: ...
def user_dictize(
    user: model.User,
    context: Dict,
    include_password_hash: bool = ...,
    include_plugin_extras: bool = ...,
) -> Dict: ...
def task_status_dictize(
    task_status: model.TaskStatus, context: Dict
) -> Dict: ...
def group_to_api(group: model.Group, context: Dict) -> Dict: ...
def tag_to_api(tag: model.Tag, context: Dict) -> Dict: ...
def resource_dict_to_api(
    res_dict: Dict, package_id: str, context: Dict
) -> Dict: ...
def package_to_api(pkg: model.Package, context: Dict) -> Dict: ...
def vocabulary_dictize(
    vocabulary: model.Vocabulary, context: Dict, include_datasets: bool = ...
) -> Dict: ...
def vocabulary_list_dictize(
    vocabulary_list: List[model.Vocabulary], context: Dict
) -> List[Dict]: ...
def activity_dictize(
    activity: model.Activity, context: Dict, include_data: bool = ...
) -> Dict: ...
def activity_list_dictize(
    activity_list: List[model.Activity],
    context: Dict,
    include_data: bool = ...,
) -> List[Dict]: ...
def user_following_user_dictize(
    follower: model.UserFollowingUser, context: Dict
) -> Dict: ...
def user_following_dataset_dictize(
    follower: model.UserFollowingDataset, context: Dict
) -> Dict: ...
def user_following_group_dictize(
    follower: model.UserFollowingGroup, context: Dict
) -> Dict: ...
def resource_view_dictize(
    resource_view: model.ResourceView, context: Dict
) -> Dict: ...
def resource_view_list_dictize(
    resource_views: List[model.ResourceView], context: Dict
) -> List[Dict]: ...
def api_token_dictize(api_token: model.ApiToken, context: Dict) -> Dict: ...
def api_token_list_dictize(
    tokens: List[model.ApiToken], context: Dict
) -> List[Dict]: ...
