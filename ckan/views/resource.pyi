"""
This type stub file was generated by pyright.
"""

import logging
import flask
import ckan.logic as logic
from flask.views import MethodView

Blueprint = flask.Blueprint
NotFound = logic.NotFound
NotAuthorized = logic.NotAuthorized
ValidationError = logic.ValidationError
check_access = logic.check_access
get_action = logic.get_action
tuplize_dict = logic.tuplize_dict
clean_dict = logic.clean_dict
parse_params = logic.parse_params
flatten_to_string_key = logic.flatten_to_string_key
log = logging.getLogger(__name__)
resource = Blueprint(
    u"dataset_resource",
    __name__,
    url_prefix=u"/dataset/<id>/resource",
    url_defaults={u"package_type": u"dataset"},
)
prefixed_resource = Blueprint(
    u"resource",
    __name__,
    url_prefix=u"/dataset/<id>/resource",
    url_defaults={u"package_type": u"dataset"},
)

def read(package_type, id, resource_id): ...
def download(package_type, id, resource_id, filename=...):
    """
    Provides a direct download by either redirecting the user to the url
    stored or downloading an uploaded file directly.
    """
    ...

class CreateView(MethodView):
    def post(self, package_type, id): ...
    def get(
        self, package_type, id, data=..., errors=..., error_summary=...
    ): ...

class EditView(MethodView):
    def post(self, package_type, id, resource_id): ...
    def get(
        self,
        package_type,
        id,
        resource_id,
        data=...,
        errors=...,
        error_summary=...,
    ): ...

class DeleteView(MethodView):
    def post(self, package_type, id, resource_id): ...
    def get(self, package_type, id, resource_id): ...

def views(package_type, id, resource_id): ...
def view(package_type, id, resource_id, view_id=...):
    """
    Embedded page for a resource view.

    Depending on the type, different views are loaded. This could be an
    img tag where the image is loaded directly or an iframe that embeds a
    webpage or a recline preview.
    """
    ...

class EditResourceViewView(MethodView):
    def post(self, package_type, id, resource_id, view_id=...): ...
    def get(
        self, package_type, id, resource_id, view_id=..., post_extra=...
    ): ...

def embedded_dataviewer(package_type, id, resource_id, width=..., height=...):
    """
    Embedded page for a read-only resource dataview. Allows
    for width and height to be specified as part of the
    querystring (as well as accepting them via routes).
    """
    ...

def datapreview(package_type, id, resource_id):
    """
    Embedded page for a resource data-preview.

    Depending on the type, different previews are loaded.  This could be an
    img tag where the image is loaded directly or an iframe that embeds a
    webpage, or a recline preview.
    """
    ...

def register_dataset_plugin_rules(blueprint): ...
