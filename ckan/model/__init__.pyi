from typing import Any, Callable, Dict, List
from sqlalchemy.engine import Engine

DB_CONNECT_RETRIES: int

def init_model(engine: Engine) -> None: ...

class Repository:
    _alembic_ini: str = ...
    tables_created_and_initialised: bool = ...
    metadata: Any
    session: Any
    commit: Callable
    def __init__(self, metadata: Any, session: Any) -> None: ...
    def commit_and_remove(self) -> None: ...
    def init_db(self) -> None: ...
    def clean_db(self) -> None: ...
    def create_db(self) -> None: ...
    def rebuild_db(self) -> None: ...
    def delete_all(self) -> None: ...
    def reset_alembic_output(self) -> None: ...
    def add_alembic_output(self, *args: str) -> None: ...
    def take_alembic_output(self, with_reset: bool = ...) -> List[str]: ...
    def setup_migration_version_control(self) -> None: ...
    def current_version(self) -> str: ...
    def downgrade_db(self, version: str = ...) -> None: ...
    def upgrade_db(self, version: str = ...) -> None: ...
    def are_tables_created(self) -> bool: ...

repo: Repository

def is_id(id_string: str) -> bool: ...
def parse_db_config(config_key: str = ...) -> Dict[str, str]: ...
