"""
This type stub file was generated by pyright.
"""

import logging
import six

'''CKAN environment configuration'''
if six.PY2:
    ...
log = logging.getLogger(__name__)
def load_environment(conf):
    """
    Configure the Pylons environment via the ``pylons.config`` object. This
    code should only need to be run once.
    """
    ...

CONFIG_FROM_ENV_VARS = { 'sqlalchemy.url': 'CKAN_SQLALCHEMY_URL','ckan.datastore.write_url': 'CKAN_DATASTORE_WRITE_URL','ckan.datastore.read_url': 'CKAN_DATASTORE_READ_URL','ckan.redis.url': 'CKAN_REDIS_URL','solr_url': 'CKAN_SOLR_URL','solr_user': 'CKAN_SOLR_USER','solr_password': 'CKAN_SOLR_PASSWORD','ckan.site_id': 'CKAN_SITE_ID','ckan.site_url': 'CKAN_SITE_URL','ckan.storage_path': 'CKAN_STORAGE_PATH','ckan.datapusher.url': 'CKAN_DATAPUSHER_URL','smtp.server': 'CKAN_SMTP_SERVER','smtp.starttls': 'CKAN_SMTP_STARTTLS','smtp.user': 'CKAN_SMTP_USER','smtp.password': 'CKAN_SMTP_PASSWORD','smtp.mail_from': 'CKAN_SMTP_MAIL_FROM','ckan.max_resource_size': 'CKAN_MAX_UPLOAD_SIZE_MB' }
def update_config():
    ''' This code needs to be run when the config is changed to take those
    changes into account. It is called whenever a plugin is loaded as the
    plugin might have changed the config values (for instance it might
    change ckan.site_url) '''
    ...

