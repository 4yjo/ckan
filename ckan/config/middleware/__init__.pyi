"""
This type stub file was generated by pyright.
"""

import logging
import six
import webob
from six.moves.urllib.parse import urlparse
from ckan.lib.i18n import get_locales_from_config
from ckan.config.environment import load_environment
from ckan.config.middleware.flask_app import make_flask_stack
from ckan.common import config
from ckan.views import handle_i18n
from routes import request_config as routes_request_config
from ckan.config.middleware.pylons_app import make_pylons_stack

"""WSGI app initialization"""
log = logging.getLogger(__name__)
if six.PY2:
    original_charset__set = webob.request.BaseRequest._charset__set
    def custom_charset__set(self, charset):
        ...
    
_internal_test_request_context = None
def make_app(conf):
    '''
    Initialise both the pylons and flask apps, and wrap them in dispatcher
    middleware.
    '''
    ...

class AskAppDispatcherMiddleware(object):
    '''
    Dispatches incoming requests to either the Flask or Pylons apps depending
    on the WSGI environ.

    Used to help transition from Pylons to Flask, and should be removed once
    Pylons has been deprecated and all app requests are handled by Flask.

    Each app should handle a call to 'can_handle_request(environ)', responding
    with a tuple:
        (<bool>, <app>, [<origin>])
    where:
       `bool` is True if the app can handle the payload url,
       `app` is the wsgi app returning the answer
       `origin` is an optional string to determine where in the app the url
        will be handled, e.g. 'core' or 'extension'.

    Order of precedence if more than one app can handle a url:
        Flask Extension > Pylons Extension > Flask Core > Pylons Core
    '''
    def __init__(self, apps=...) -> None:
        ...
    
    def ask_around(self, environ):
        '''Checks with all apps whether they can handle the incoming request
        '''
        ...
    
    def __call__(self, environ, start_response):
        '''Determine which app to call by asking each app if it can handle the
        url and method defined on the eviron'''
        ...
    


