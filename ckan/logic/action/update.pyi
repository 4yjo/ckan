from typing import Dict, Union
from ckan.logic import Context, DataDict

def resource_update(context: Context, data_dict: DataDict) -> Dict: ...
def resource_view_update(context: Context, data_dict: DataDict) -> Dict: ...
def resource_view_reorder(context: Context, data_dict: DataDict) -> Dict: ...
def package_update(
    context: Context, data_dict: DataDict
) -> Union[str, Dict]: ...
def package_revise(context: Context, data_dict: DataDict) -> Dict: ...
def package_resource_reorder(
    context: Context, data_dict: DataDict
) -> Dict: ...
def package_relationship_update(
    context: Context, data_dict: DataDict
) -> Dict: ...
def group_update(context: Context, data_dict: DataDict) -> Dict: ...
def organization_update(context: Context, data_dict: DataDict) -> Dict: ...
def user_update(context: Context, data_dict: DataDict) -> Dict: ...
def user_generate_apikey(context: Context, data_dict: DataDict) -> Dict: ...
def task_status_update(context: Context, data_dict: DataDict) -> Dict: ...
def task_status_update_many(context: Context, data_dict: DataDict) -> Dict: ...
def term_translation_update(context: Context, data_dict: DataDict) -> Dict: ...
def term_translation_update_many(
    context: Context, data_dict: DataDict
) -> Dict: ...
def vocabulary_update(context: Context, data_dict: DataDict) -> Dict: ...
def dashboard_mark_activities_old(
    context: Context, data_dict: DataDict
) -> None: ...
def send_email_notifications(
    context: Context, data_dict: DataDict
) -> None: ...
def package_owner_org_update(
    context: Context, data_dict: DataDict
) -> None: ...
def bulk_update_private(context: Context, data_dict: DataDict) -> None: ...
def bulk_update_public(context: Context, data_dict: DataDict) -> None: ...
def bulk_update_delete(context: Context, data_dict: DataDict) -> None: ...
def config_option_update(context: Context, data_dict: DataDict) -> Dict: ...
