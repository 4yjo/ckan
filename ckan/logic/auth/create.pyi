from typing import Optional
from ckan.logic import Context, DataDict, AuthResult

def package_create(
    context: Context, data_dict: Optional[DataDict]
) -> AuthResult: ...
def file_upload(
    context: Context, data_dict: Optional[DataDict]
) -> AuthResult: ...
def resource_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def resource_view_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def resource_create_default_resource_views(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def package_create_default_resource_views(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def package_relationship_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def group_create(
    context: Context, data_dict: Optional[DataDict]
) -> AuthResult: ...
def organization_create(
    context: Context, data_dict: Optional[DataDict]
) -> AuthResult: ...
def rating_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def user_create(
    context: Context, data_dict: Optional[DataDict]
) -> AuthResult: ...
def user_invite(context: Context, data_dict: DataDict) -> AuthResult: ...
def _check_group_auth(context: Context, data_dict: DataDict) -> AuthResult: ...
def vocabulary_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def activity_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def tag_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def _group_or_org_member_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def organization_member_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def group_member_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
def member_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def api_token_create(context: Context, data_dict: DataDict) -> AuthResult: ...
def package_collaborator_create(
    context: Context, data_dict: DataDict
) -> AuthResult: ...
