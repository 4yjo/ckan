from typing import Any, Dict
from ckan.types import Context, ErrorDict, TuplizedKey


def convert_to_extras(
    key: TuplizedKey,
    data: Dict[TuplizedKey, Any],
    errors: ErrorDict,
    context: Context,
) -> Any: ...
def convert_from_extras(
    key: TuplizedKey,
    data: Dict[TuplizedKey, Any],
    errors: ErrorDict,
    context: Context,
) -> Any: ...
def extras_unicode_convert(extras, context): ...
def free_tags_only(
    key: TuplizedKey,
    data: Dict[TuplizedKey, Any],
    errors: ErrorDict,
    context: Context,
) -> Any: ...
def convert_to_tags(vocab: Any) -> Any: ...
def convert_from_tags(vocab: Any) -> Any: ...
def convert_user_name_or_id_to_id(
    user_name_or_id: Any, context: Context
) -> Any: ...
def convert_package_name_or_id_to_id(
    package_name_or_id: Any, context: Context
) -> Any: ...
def convert_group_name_or_id_to_id(
    group_name_or_id: Any, context: Context
) -> Any: ...
def convert_to_json_if_string(value: Any, context: Context) -> Any: ...
def convert_to_list_if_string(value: Any, context=...) -> Any: ...
def json_or_string(value: Any) -> Any: ...
def json_list_or_string(value: Any) -> Any: ...
def remove_whitespace(value: Any, context: Context) -> Any: ...
